#
# Области видимости переменных
#

"""
 Заикание
Из-за плохой связи на мобильный телефон Василия приходят одни и те же смски по несколько раз.
Он попросил вас написать небольшую функцию, которая будет работать почти как обычный print,
но не будет печатать сообщение, если предыдущее сообщение было таким же.
Чтобы телефон эти изменения в распечатке смсок принял, ваш друг настроил его так,
что вам достаточно написать функцию
  print_without_duplicates(message).
Напишите её.
"""
prev_mess = ''


def print_without_duplicates(message):
    global prev_mess
    if message not in prev_mess:
        print(message)
        prev_mess = message


# print_without_duplicates("HELLO")
# print_without_duplicates("HELLO")
# print_without_duplicates("hello")
# print_without_duplicates("hello")
# print_without_duplicates("Hello hello hello")
# print_without_duplicates("HELLO")
# print_without_duplicates("HELLO")

"""
Для работы небольшого магазинчика вас попросили сделать небольшой набор функций, обеспечивающих работу с чеками. 
В качестве пробной версии вам нужно реализовать всего два действия: добавление покупки к набору покупаемых товаров, и 
печать чека. После того как чек напечатан должно быть возможно вводить новый список товаров.

 По правилам оформления документов в каждом чеке вы должны напечатать сначала номер чека (нумерация начинается с единицы)
и число товаров, затем список товаров с ценами и в конце — итоговую стоимость. Из-за того, что вы не знаете число товаров,
пока кассир не «пробьет» последний товар, нельзя печатать чек по мере ввода товаров. Приходится сначала добавить все 
необходимые товары и только затем печатать весь чек целиком. 
В конце чека печатается черта (состоящая из пяти знаков минус), по которой он отрывается от ленты.

 Организуйте две функции: add_item(item_name, item_cost) и print_receipt(), которые реализуют указанный функционал. 
Форматирование сделайте по шаблону в примере.
В случае, когда чек пуст, print_receipt не должна печатать чек. Не забудьте, что после того как чек напечатан, 
набор выбранных товаров должен обнулиться, чтобы можно было вводить товары для нового чека.
"""
number_check = 1
goods = []


def add_item(item_name, item_cost):
    goods.append([item_name, item_cost])


def print_receipt():
    global number_check, goods
    if goods:
        print(f"Чек {number_check}.  Всего предметов: {len(goods)}")
        total = 0
        for item in goods:
            total += item[1]
            print(f"{item[0]} - {item[1]}")
        print(f"Итого: {total}\n-----")
        number_check += 1
        goods = []


def reset():
    global number_check
    number_check = 1


# reset()
# add_item('Блокнот', 100)
# print_receipt()
#
# add_item('Ручка', 70)
# print_receipt()
# print_receipt()
#
# add_item('Булочка', 15)
# add_item('Булочка', 15)
# add_item('Чай', 5)
# print_receipt()
#
# add_item('Булочка', 15)
# add_item('Булочка', 15)
## (Отменить чек) - этот чек не печатаем


"""
НРЗБРЧВ

В письменности языка НРЗБРЧВ отсутствуют гласные буквы и знаки препинания, в остальном язык ничем не отличается от русского языка. Чтобы из слова русского языка получить слово языка НРЗБРЧВ, достаточно выкинуть из слова все гласные. Чтобы перевести предложение, нужно перевести каждое слово и выкинуть знаки препинания. Регистр букв следует оставить неизменным.
Напишите функцию translate(text), которая переводит текст с русского языка на НРЗБРЧВ.
Свой результат функция должна записать во внешнюю переменную translated_text.
"""

translated_text = None


def translate(text):
    global translated_text
    punctuation = ['а', 'у', 'о', 'ы', 'и', 'э', 'я', 'ю', 'ё', 'е',
                   'А', 'У', 'О', 'Ы', 'И', 'Э', 'Я', 'Ю', 'Ё', 'Е',
                   '.', ',', '-', '!', '?']
    clean_text = text
    for p in punctuation:
        clean_text = clean_text.replace(p, '')
    translated_text = ' '.join(clean_text.split())
    # lst = clean_text.split()

    print(translated_text)


translate(
    "Удивительный факт, но текст на языке НЕРАЗБОРЧИВО оказывается довольно просто читать. Достаточно небольшой тренировки - и вы сможете это делать.")
